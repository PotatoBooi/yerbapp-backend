# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddManufacturerInput {
  name: String!
  country: String!
  photoUrl: String
  creatorId: ID!
}

input AddProductInput {
  manufacturerId: ID!
  typeId: ID!
  name: String!
  details: String!
  photoUrl: String
}

input AddRankInput {
  name: String!
  lowerRange: Int!
  upperRange: Int!
}

input AddReviewInput {
  aroma: Int
  taste: Int
  bitterness: Int
  energy: Int
  price: Int
  overall: Int
  description: String!
  authorId: ID!
  productId: ID!
}

input AddTypeInput {
  name: String!
}

input EditManufacturerInput {
  name: String
  country: String
  photoUrl: String
}

input EditProductInput {
  name: String
  details: String
  photoUrl: String
}

input EditRankInput {
  name: String
  lowerRange: Int
  upperRange: Int
}

input EditReviewInput {
  aroma: Int
  taste: Int
  bitterness: Int
  energy: Int
  price: Int
  overall: Int
  description: String!
}

input EditTypeInput {
  name: String!
}

input EditUserInput {
  country: String
  photoUrl: String
  aromaImportance: Int
  tasteImportance: Int
  bitternessImportance: Int
  priceImportance: Int
  energyImportance: Int
  overallImportance: Int
}

type Manufacturer {
  id: ID!
  name: String!
  country: String!
  photoUrl: String
  products: [Product!]
  editedAt: String!
  createdAt: String!
}

type ManufacturersResponse {
  items: [Manufacturer!]!
  total: Int!
}

type Mutation {
  editUser(user: EditUserInput!, userId: ID!): User!
  assignAdmin(userId: ID!): User!
  revokeAdmin(userId: ID!): User!
  deleteUser(userId: ID!): Boolean!
  addReview(review: AddReviewInput!): Review!
  editReview(review: EditReviewInput!, reviewId: ID!): Review!
  deleteReview(reviewId: ID!): Boolean!
  addType(type: AddTypeInput!): ProductType!
  editType(type: EditTypeInput!, typeId: ID!): ProductType!
  deleteType(typeId: ID!): Boolean!
  addProduct(product: AddProductInput!): Product!
  editProduct(product: EditProductInput!, productId: ID!): Product!
  deleteProduct(productId: ID!): Boolean!
  addManufacturer(manufacturer: AddManufacturerInput!): Manufacturer!
  editManufacturer(manufacturer: EditManufacturerInput!, manufacturerId: ID!): Manufacturer!
  deleteManufacturer(manufacturerId: ID!): Boolean!
  addRank(rank: AddRankInput!): Rank!
  editRank(rank: EditRankInput!, rankId: ID!): Rank!
  deleteRank(rankId: ID!): Boolean!
}

type Product {
  id: ID!
  manufacturer: Manufacturer!
  type: ProductType!
  reviews: [Review!]
  name: String!
  details: String!
  photoUrl: String
  createdAt: String!
}

type ProductsResponse {
  items: [Product!]!
  total: Int!
}

type ProductType {
  id: ID!
  name: String!
  createdAt: String!
}

type Profile {
  id: ID!
  rank: Rank!
  experiencePoints: Int!
  aromaImportance: Int!
  tasteImportance: Int!
  bitternessImportance: Int!
  priceImportance: Int!
  energyImportance: Int!
  overallImportance: Int!
  editedAt: String!
  createdAt: String!
}

type Query {
  user(userId: ID!): User!
  whoAmI: User!
  users(perPage: Int, offset: Int): [User!]!
  review(reviewId: ID!): Review!
  reviews(perPage: Int, offset: Int): ReviewsResponse!
  types: TypesResponse!
  type(typeId: ID!): ProductType!
  products(perPage: Int, offset: Int): ProductsResponse!
  product(productId: ID!): Product!
  manufacturers(perPage: Int, offset: Int): ManufacturersResponse!
  manufacturer(manufacturerId: ID!): Manufacturer!
  ranks: RanksResponse!
  rank(rankId: ID!): Rank!
}

type Rank {
  id: ID!
  name: String!
  lowerRange: Int!
  upperRange: Int!
  createdAt: String!
}

type RanksResponse {
  items: [Rank!]!
  total: Int!
}

type Review {
  id: ID!
  aroma: Int!
  taste: Int!
  bitterness: Int!
  energy: Int!
  price: Int!
  overall: Int!
  description: String!
  product: Product!
  author: User!
  editedAt: String!
  createdAt: String!
}

type ReviewsResponse {
  items: [Review!]!
  total: Int!
}

type TypesResponse {
  items: [ProductType!]!
  total: Int!
}

type User {
  id: ID!
  profile: Profile!
  username: String!
  email: String!
  country: String
  avatarUrl: String!
  role: String!
  reviews: [Review!]
  createdAt: String!
}
